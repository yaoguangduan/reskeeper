// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: demo.proto

package pbgen

import (
	_ "github.com/yaoguangduan/reskeeper/resproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VipLevel int32

const (
	VipLevel_Level0 VipLevel = 0
	VipLevel_Level1 VipLevel = 1
	VipLevel_Level2 VipLevel = 2
)

// Enum value maps for VipLevel.
var (
	VipLevel_name = map[int32]string{
		0: "Level0",
		1: "Level1",
		2: "Level2",
	}
	VipLevel_value = map[string]int32{
		"Level0": 0,
		"Level1": 1,
		"Level2": 2,
	}
)

func (x VipLevel) Enum() *VipLevel {
	p := new(VipLevel)
	*p = x
	return p
}

func (x VipLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_demo_proto_enumTypes[0].Descriptor()
}

func (VipLevel) Type() protoreflect.EnumType {
	return &file_demo_proto_enumTypes[0]
}

func (x VipLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipLevel.Descriptor instead.
func (VipLevel) EnumDescriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{0}
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string  `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	BeginTime *uint64  `protobuf:"varint,2,opt,name=beginTime,proto3,oneof" json:"beginTime,omitempty"`
	Intimacy  *float32 `protobuf:"fixed32,3,opt,name=intimacy,proto3,oneof" json:"intimacy,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{0}
}

func (x *Friend) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Friend) GetBeginTime() uint64 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *Friend) GetIntimacy() float32 {
	if x != nil && x.Intimacy != nil {
		return *x.Intimacy
	}
	return 0
}

type PetFood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *string `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Weight *int32  `protobuf:"varint,2,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
}

func (x *PetFood) Reset() {
	*x = PetFood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetFood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetFood) ProtoMessage() {}

func (x *PetFood) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetFood.ProtoReflect.Descriptor instead.
func (*PetFood) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{1}
}

func (x *PetFood) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *PetFood) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type Pet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *string    `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Age   *int32     `protobuf:"varint,2,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Cost  *int32     `protobuf:"varint,3,opt,name=cost,proto3,oneof" json:"cost,omitempty"`
	Foods []*PetFood `protobuf:"bytes,4,rep,name=foods,proto3" json:"foods,omitempty"`
}

func (x *Pet) Reset() {
	*x = Pet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pet) ProtoMessage() {}

func (x *Pet) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pet.ProtoReflect.Descriptor instead.
func (*Pet) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{2}
}

func (x *Pet) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Pet) GetAge() int32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *Pet) GetCost() int32 {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return 0
}

func (x *Pet) GetFoods() []*PetFood {
	if x != nil {
		return x.Foods
	}
	return nil
}

type WorkRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *string `protobuf:"bytes,1,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Rate *int32  `protobuf:"varint,2,opt,name=rate,proto3,oneof" json:"rate,omitempty"`
}

func (x *WorkRecord) Reset() {
	*x = WorkRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkRecord) ProtoMessage() {}

func (x *WorkRecord) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkRecord.ProtoReflect.Descriptor instead.
func (*WorkRecord) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{3}
}

func (x *WorkRecord) GetTime() string {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return ""
}

func (x *WorkRecord) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

type WorkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc      *string       `protobuf:"bytes,1,opt,name=desc,proto3,oneof" json:"desc,omitempty"`
	Reward    *int32        `protobuf:"varint,2,opt,name=reward,proto3,oneof" json:"reward,omitempty"`
	SpendTime *int64        `protobuf:"varint,3,opt,name=spendTime,proto3,oneof" json:"spendTime,omitempty"`
	Records   []*WorkRecord `protobuf:"bytes,4,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *WorkInfo) Reset() {
	*x = WorkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkInfo) ProtoMessage() {}

func (x *WorkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkInfo.ProtoReflect.Descriptor instead.
func (*WorkInfo) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{4}
}

func (x *WorkInfo) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *WorkInfo) GetReward() int32 {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return 0
}

func (x *WorkInfo) GetSpendTime() int64 {
	if x != nil && x.SpendTime != nil {
		return *x.SpendTime
	}
	return 0
}

func (x *WorkInfo) GetRecords() []*WorkRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type Football struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr  *string `protobuf:"bytes,1,opt,name=addr,proto3,oneof" json:"addr,omitempty"`
	Count *int32  `protobuf:"varint,2,opt,name=count,proto3,oneof" json:"count,omitempty"`
}

func (x *Football) Reset() {
	*x = Football{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Football) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Football) ProtoMessage() {}

func (x *Football) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Football.ProtoReflect.Descriptor instead.
func (*Football) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{5}
}

func (x *Football) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *Football) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type GamePlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *string  `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Cost *float32 `protobuf:"fixed32,2,opt,name=cost,proto3,oneof" json:"cost,omitempty"`
}

func (x *GamePlay) Reset() {
	*x = GamePlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlay) ProtoMessage() {}

func (x *GamePlay) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlay.ProtoReflect.Descriptor instead.
func (*GamePlay) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{6}
}

func (x *GamePlay) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *GamePlay) GetCost() float32 {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string             `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Age       *uint32             `protobuf:"varint,2,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Weight    *float32            `protobuf:"fixed32,3,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	Location  *float64            `protobuf:"fixed64,4,opt,name=location,proto3,oneof" json:"location,omitempty"`
	IsStudent *bool               `protobuf:"varint,5,opt,name=isStudent,proto3,oneof" json:"isStudent,omitempty"`
	VipLevel  *VipLevel           `protobuf:"varint,6,opt,name=vipLevel,proto3,enum=VipLevel,oneof" json:"vipLevel,omitempty"`
	Lovers    []string            `protobuf:"bytes,7,rep,name=lovers,proto3" json:"lovers,omitempty"`
	Pets      []*Pet              `protobuf:"bytes,8,rep,name=pets,proto3" json:"pets,omitempty"`
	Friends   map[string]*Friend  `protobuf:"bytes,9,rep,name=friends,proto3" json:"friends,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Recipes   map[string]float32  `protobuf:"bytes,10,rep,name=recipes,proto3" json:"recipes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Works     map[int64]*WorkInfo `protobuf:"bytes,11,rep,name=works,proto3" json:"works,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Activity:
	//
	//	*User_Football
	//	*User_Game
	//	*User_Other
	Activity isUser_Activity `protobuf_oneof:"activity"`
	Spouse   *Spouse         `protobuf:"bytes,15,opt,name=spouse,proto3,oneof" json:"spouse,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *User) GetAge() uint32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *User) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *User) GetLocation() float64 {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return 0
}

func (x *User) GetIsStudent() bool {
	if x != nil && x.IsStudent != nil {
		return *x.IsStudent
	}
	return false
}

func (x *User) GetVipLevel() VipLevel {
	if x != nil && x.VipLevel != nil {
		return *x.VipLevel
	}
	return VipLevel_Level0
}

func (x *User) GetLovers() []string {
	if x != nil {
		return x.Lovers
	}
	return nil
}

func (x *User) GetPets() []*Pet {
	if x != nil {
		return x.Pets
	}
	return nil
}

func (x *User) GetFriends() map[string]*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *User) GetRecipes() map[string]float32 {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *User) GetWorks() map[int64]*WorkInfo {
	if x != nil {
		return x.Works
	}
	return nil
}

func (m *User) GetActivity() isUser_Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (x *User) GetFootball() *Football {
	if x, ok := x.GetActivity().(*User_Football); ok {
		return x.Football
	}
	return nil
}

func (x *User) GetGame() *GamePlay {
	if x, ok := x.GetActivity().(*User_Game); ok {
		return x.Game
	}
	return nil
}

func (x *User) GetOther() string {
	if x, ok := x.GetActivity().(*User_Other); ok {
		return x.Other
	}
	return ""
}

func (x *User) GetSpouse() *Spouse {
	if x != nil {
		return x.Spouse
	}
	return nil
}

type isUser_Activity interface {
	isUser_Activity()
}

type User_Football struct {
	Football *Football `protobuf:"bytes,12,opt,name=football,proto3,oneof"`
}

type User_Game struct {
	Game *GamePlay `protobuf:"bytes,13,opt,name=game,proto3,oneof"`
}

type User_Other struct {
	Other string `protobuf:"bytes,14,opt,name=other,proto3,oneof"`
}

func (*User_Football) isUser_Activity() {}

func (*User_Game) isUser_Activity() {}

func (*User_Other) isUser_Activity() {}

type SpouseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight *int32  `protobuf:"varint,1,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	Intro  *string `protobuf:"bytes,2,opt,name=intro,proto3,oneof" json:"intro,omitempty"`
	Work   *string `protobuf:"bytes,3,opt,name=work,proto3,oneof" json:"work,omitempty"`
}

func (x *SpouseDetail) Reset() {
	*x = SpouseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpouseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpouseDetail) ProtoMessage() {}

func (x *SpouseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpouseDetail.ProtoReflect.Descriptor instead.
func (*SpouseDetail) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{8}
}

func (x *SpouseDetail) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *SpouseDetail) GetIntro() string {
	if x != nil && x.Intro != nil {
		return *x.Intro
	}
	return ""
}

func (x *SpouseDetail) GetWork() string {
	if x != nil && x.Work != nil {
		return *x.Work
	}
	return ""
}

type Spouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string       `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Age    *int32        `protobuf:"varint,2,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Addr   *string       `protobuf:"bytes,3,opt,name=addr,proto3,oneof" json:"addr,omitempty"`
	Detail *SpouseDetail `protobuf:"bytes,4,opt,name=detail,proto3,oneof" json:"detail,omitempty"`
}

func (x *Spouse) Reset() {
	*x = Spouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spouse) ProtoMessage() {}

func (x *Spouse) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spouse.ProtoReflect.Descriptor instead.
func (*Spouse) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{9}
}

func (x *Spouse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Spouse) GetAge() int32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *Spouse) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *Spouse) GetDetail() *SpouseDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type UserTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserTable) Reset() {
	*x = UserTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTable) ProtoMessage() {}

func (x *UserTable) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTable.ProtoReflect.Descriptor instead.
func (*UserTable) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{10}
}

func (x *UserTable) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type PetTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pets []*Pet `protobuf:"bytes,1,rep,name=pets,proto3" json:"pets,omitempty"`
}

func (x *PetTable) Reset() {
	*x = PetTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetTable) ProtoMessage() {}

func (x *PetTable) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetTable.ProtoReflect.Descriptor instead.
func (*PetTable) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{11}
}

func (x *PetTable) GetPets() []*Pet {
	if x != nil {
		return x.Pets
	}
	return nil
}

var File_demo_proto protoreflect.FileDescriptor

var file_demo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8f, 0x01, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d,
	0x61, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x69, 0x6d, 0x61, 0x63, 0x79, 0x88, 0x01, 0x01, 0x3a, 0x04, 0x80, 0xbc, 0x18, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61,
	0x63, 0x79, 0x22, 0x53, 0x0a, 0x07, 0x50, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x03, 0x50, 0x65, 0x74, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x04, 0x63, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x65, 0x74, 0x46, 0x6f, 0x6f,
	0x64, 0x52, 0x05, 0x66, 0x6f, 0x6f, 0x64, 0x73, 0x3a, 0x0e, 0x8a, 0xbc, 0x18, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x3a, 0x33, 0x2d, 0x39, 0x39, 0x39, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x22, 0x50, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x12,
	0x17, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x22, 0xe6, 0x06, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xc8,
	0xbc, 0x18, 0x01, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x42, 0x10, 0xc2, 0xbc, 0x18, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88,
	0xb7, 0xe4, 0xbd, 0x93, 0xe9, 0x87, 0x8d, 0x48, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x56, 0x69, 0x70,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x06, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x04,
	0x70, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x50, 0x65, 0x74,
	0x52, 0x04, 0x70, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x6f,
	0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46,
	0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x74, 0x62,
	0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x06,
	0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53,
	0x70, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x10, 0xc2, 0xbc, 0x18, 0x0c, 0xe9, 0x85, 0x8d, 0xe5, 0x81,
	0xb6, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x48, 0x07, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x75, 0x73,
	0x65, 0x88, 0x01, 0x01, 0x1a, 0x43, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x18, 0x80, 0xbc, 0x18, 0x01,
	0x8a, 0xbc, 0x18, 0x10, 0x64, 0x65, 0x73, 0x63, 0x3a, 0x33, 0x2c, 0x35, 0x2d, 0x37, 0x2c, 0x39,
	0x2d, 0x39, 0x39, 0x39, 0x42, 0x0a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x67,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x69, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x22,
	0x7d, 0x0a, 0x0c, 0x53, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0xa2,
	0x01, 0x0a, 0x06, 0x53, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x48, 0x03, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x67, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x42, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x3a, 0x18, 0xf2,
	0xbb, 0x18, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xfa,
	0xbb, 0x18, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x08, 0x50, 0x65, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x04, 0x2e, 0x50, 0x65, 0x74, 0x52, 0x04, 0x70, 0x65, 0x74, 0x73, 0x3a, 0x17, 0xf2,
	0xbb, 0x18, 0x0c, 0xe5, 0xae, 0xa0, 0xe7, 0x89, 0xa9, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xfa,
	0xbb, 0x18, 0x03, 0x70, 0x65, 0x74, 0x2a, 0x52, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x30, 0x10, 0x00, 0x1a, 0x0a,
	0x92, 0xbd, 0x18, 0x06, 0xe6, 0x99, 0xae, 0xe9, 0x80, 0x9a, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x10, 0x01, 0x1a, 0x0a, 0x92, 0xbd, 0x18, 0x06, 0xe7, 0x99, 0xbd, 0xe9,
	0x87, 0x91, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x10, 0x02, 0x1a, 0x0a,
	0x92, 0xbd, 0x18, 0x06, 0xe9, 0x92, 0xbb, 0xe7, 0x9f, 0xb3, 0x42, 0x4b, 0xa2, 0xbb, 0x18, 0x1a,
	0x2e, 0x2e, 0x2f, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2f, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe6,
	0xa0, 0xb7, 0xe4, 0xbe, 0x8b, 0x2e, 0x78, 0x6c, 0x73, 0x78, 0xaa, 0xbb, 0x18, 0x07, 0x2e, 0x2e,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0xb0, 0xbb, 0x18, 0x01, 0xb8, 0xbb, 0x18, 0x01, 0xc2, 0xbb, 0x18,
	0x04, 0x66, 0x75, 0x6c, 0x6c, 0xc2, 0xbb, 0x18, 0x04, 0x64, 0x65, 0x73, 0x63, 0x5a, 0x08, 0x2e,
	0x2e, 0x2f, 0x70, 0x62, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_demo_proto_rawDescOnce sync.Once
	file_demo_proto_rawDescData = file_demo_proto_rawDesc
)

func file_demo_proto_rawDescGZIP() []byte {
	file_demo_proto_rawDescOnce.Do(func() {
		file_demo_proto_rawDescData = protoimpl.X.CompressGZIP(file_demo_proto_rawDescData)
	})
	return file_demo_proto_rawDescData
}

var file_demo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_demo_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_demo_proto_goTypes = []any{
	(VipLevel)(0),        // 0: VipLevel
	(*Friend)(nil),       // 1: Friend
	(*PetFood)(nil),      // 2: PetFood
	(*Pet)(nil),          // 3: Pet
	(*WorkRecord)(nil),   // 4: WorkRecord
	(*WorkInfo)(nil),     // 5: WorkInfo
	(*Football)(nil),     // 6: Football
	(*GamePlay)(nil),     // 7: GamePlay
	(*User)(nil),         // 8: User
	(*SpouseDetail)(nil), // 9: SpouseDetail
	(*Spouse)(nil),       // 10: Spouse
	(*UserTable)(nil),    // 11: UserTable
	(*PetTable)(nil),     // 12: PetTable
	nil,                  // 13: User.FriendsEntry
	nil,                  // 14: User.RecipesEntry
	nil,                  // 15: User.WorksEntry
}
var file_demo_proto_depIdxs = []int32{
	2,  // 0: Pet.foods:type_name -> PetFood
	4,  // 1: WorkInfo.records:type_name -> WorkRecord
	0,  // 2: User.vipLevel:type_name -> VipLevel
	3,  // 3: User.pets:type_name -> Pet
	13, // 4: User.friends:type_name -> User.FriendsEntry
	14, // 5: User.recipes:type_name -> User.RecipesEntry
	15, // 6: User.works:type_name -> User.WorksEntry
	6,  // 7: User.football:type_name -> Football
	7,  // 8: User.game:type_name -> GamePlay
	10, // 9: User.spouse:type_name -> Spouse
	9,  // 10: Spouse.detail:type_name -> SpouseDetail
	8,  // 11: UserTable.users:type_name -> User
	3,  // 12: PetTable.pets:type_name -> Pet
	1,  // 13: User.FriendsEntry.value:type_name -> Friend
	5,  // 14: User.WorksEntry.value:type_name -> WorkInfo
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_demo_proto_init() }
func file_demo_proto_init() {
	if File_demo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_demo_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PetFood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Pet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WorkRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WorkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Football); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GamePlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SpouseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Spouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UserTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PetTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_demo_proto_msgTypes[0].OneofWrappers = []any{}
	file_demo_proto_msgTypes[1].OneofWrappers = []any{}
	file_demo_proto_msgTypes[2].OneofWrappers = []any{}
	file_demo_proto_msgTypes[3].OneofWrappers = []any{}
	file_demo_proto_msgTypes[4].OneofWrappers = []any{}
	file_demo_proto_msgTypes[5].OneofWrappers = []any{}
	file_demo_proto_msgTypes[6].OneofWrappers = []any{}
	file_demo_proto_msgTypes[7].OneofWrappers = []any{
		(*User_Football)(nil),
		(*User_Game)(nil),
		(*User_Other)(nil),
	}
	file_demo_proto_msgTypes[8].OneofWrappers = []any{}
	file_demo_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_demo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_demo_proto_goTypes,
		DependencyIndexes: file_demo_proto_depIdxs,
		EnumInfos:         file_demo_proto_enumTypes,
		MessageInfos:      file_demo_proto_msgTypes,
	}.Build()
	File_demo_proto = out.File
	file_demo_proto_rawDesc = nil
	file_demo_proto_goTypes = nil
	file_demo_proto_depIdxs = nil
}
